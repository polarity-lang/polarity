data Nat {
    Z,
    S(n: Nat),
}

data Fin(max: Nat) {
    FZ(max: Nat): Fin(max),
    FS(max: Nat, val: Fin(max)): Fin(S(max)),
}

codata ProductN(arity: Nat) {
    ProductN(S(arity)).typeAt(arity: Nat, pos: Fin(arity)): Type,
    (self: ProductN(S(arity))).dataAt(arity: Nat, pos: Fin(arity)): self.typeAt(arity, pos),
}

codef Unit: ProductN(0) {
    .typeAt(_, _) absurd,
    .dataAt(_, _) absurd,
}
