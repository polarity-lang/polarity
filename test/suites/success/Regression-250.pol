data ℕ {
    Z,
    S(n: ℕ),
}

data Fin(max: ℕ) {
    FZ(max: ℕ): Fin(max),
    FS(max: ℕ, val: Fin(max)): Fin(S(max)),
}

codata Product₋(arity: ℕ) {
    Product₋(S(arity)).typeAt₋(arity: ℕ, pos: Fin(arity)): Type,
    (self: Product₋(S(arity))).dataAt₋(arity: ℕ, pos: Fin(arity)): self.typeAt₋(arity, pos),
}

codef Unit₋: Product₋(0) {
    typeAt₋(_, _) absurd,
    dataAt₋(_, _) absurd,
}
