codata Fun(A B: Type) {
  Fun(A,B).ap(A B: Type, x: A): B
}

codata Pi(T: Fun(Bool, Type)) {
  Pi(T).dap(T: Fun(Bool,Type), x: Bool): T.ap(Bool,Type,x)
}

data Bool { True, False }

def Bool.ind( P: Fun(Bool,Type)
                , step: Pi(comatch { ap(_,_,x) => P.ap(Bool,Type,x) -> P.ap(Bool,Type,x) })
                ) : Bool {
  True => ?,
  False => ?
}
