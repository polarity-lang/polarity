def .add(y) {
    Z => y,
    S(x') => S(x'.add(y)),
}

def .head(n) {
    Cons(n', x, xs) => panic!("not yet implemented"),
    Nil absurd,
}

def .tail(n) {
    Cons(n', x, xs) => panic!("not yet implemented"),
    Nil absurd,
}

def .append(n, m, ys) {
    Nil => ys,
    Cons(n', x, xs) => Cons(n'.add(m), x, xs.append(n', m, ys)),
}

def .example1 { Unit => Cons(S(Z), Z, Cons(Z, Z, Nil)) }

def .example2 { Unit => Unit.example1.append(S(S(Z)), S(S(Z)), Unit.example1) }

def .not {
    T => F,
    F => T,
}

def .if_then_else(then, else) {
    T => then,
    F => else,
}

codef Zeroes {
    .sHead => Z,
    .sTail => Zeroes,
}

codef Ones {
    .sHead => S(Z),
    .sTail => panic!("not yet implemented"),
}

codef Alternate(choose) {
    .sHead => choose.if_then_else(S(panic!("not yet implemented")), Z),
    .sTail => Alternate(choose.not),
}
