data Nat { Z, S(n: Nat) }

data Bool { T, F }

def Bool.not: Bool {
    T => F,
    F => T
}

def Bool.if_then_else(a: Type, then else: a): a {
    T => then,
    F => else
}

codata Stream { .head: Nat, .tail: Stream }

codef Zeroes: Stream {
    .head => Z,
    .tail => Zeroes
}

codef Ones: Stream {
    .head => S(Z),
    .tail => Ones
}

codef Alternate(choose: Bool): Stream {
    .head => choose.if_then_else(Nat, S(Z), Z),
    .tail => Alternate(choose.not)
}
