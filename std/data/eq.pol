/// The Martin-LÃ¶f equality type.
data Eq(implicit a: Type, x y: a) {
    /// The reflexivity constructor.
    Refl(implicit a: Type, x: a): Eq(x, x),
}

/// Proof of symmetry of equality.
def Eq(a:=a, x, y).sym(a: Type, x y: a): Eq(a:=a, y, x) { Refl(a, x) => Refl(a:=a, x) }

/// Proof of transitivity of equality.
def Eq(a:=a, x, y).trans(a: Type, x y z: a, h: Eq(a:=a, y, z)): Eq(a:=a, x, z) { Refl(a, x) => h }
