data Nat { Z, S(n: Nat)}
data Bool { True, False}
data Pair(a b: Type) { MkPair(a b: Type, x: a, y: b) : Pair(a,b)}

codata Buffer(n: Nat) {
    Buffer(S(n)).read(n: Nat): Pair(Bool, Buffer(n))
}

codef EmptyBuffer : Buffer(Z) {
  read(n) absurd
}

codef Singleton(b: Bool) : Buffer(S(Z)) {
  read(n) => MkPair(Bool,Buffer(Z),b,EmptyBuffer)
}
