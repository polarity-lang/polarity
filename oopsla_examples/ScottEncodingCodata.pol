codata Fun(A B: Type) {
  Fun(A,B).ap(A B: Type, x: A) : B
}

codata Nat { case(A: Type, z: A, s: Fun(Nat, A)): A }

codef S(p: Nat): Nat { case(A, z, s) => s.ap(Nat, A, p) }

codef Z: Nat { case(A, z, s) => z }
