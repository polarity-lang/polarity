codata Fun(A B: Type) {
  Fun(A,B).ap(A B: Type, x: A): B
}

codata ∃₋(T: Type -> Type) {
  ∃₋(T).π₁(T: Type -> Type): Type,
  (self: ∃₋(T)).π₂(T: Type -> Type): T.ap(Type,Type, self.π₁(T))
}

codef Pack(T: Type -> Type, A: Type, W: T.ap(Type,Type,A)): ∃₋(T) {
  π₁(T) => A,
  π₂(T) => W,
}
