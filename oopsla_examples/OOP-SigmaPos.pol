codata Fun(A B: Type) {
  Fun(A,B).ap(A B: Type, x: A): B
}

data Σ₊(A: Type, T: A -> Type) {
  Pair(A: Type, T: A -> Type, x: A, w: T.ap(A,Type,x)): Σ₊(A,T)
}

def Σ₊(A,T).π₁(A: Type, T: A -> Type): A {
  Pair(A, T, x, w) => x,
}

def (self: Σ₊(A,T)).π₂(A: Type, T: A -> Type): T.ap(A,Type, self.π₁(A,T)) {
  Pair(A, T, x, w) => w,
}
